/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import logica.ArchivosTexto;
import logica.Reportes;
import logica.Validaciones;
import logica.base.*;


public class FrmLogin extends javax.swing.JFrame {

    
    public FrmLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblIngresar = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        lblClave = new javax.swing.JLabel();
        passClave = new javax.swing.JPasswordField();
        btnIngresar = new javax.swing.JButton();
        lblMensaje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblIngresar.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lblIngresar.setText("LOGIN");
        jPanel1.add(lblIngresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 11, -1, -1));

        lblUsuario.setFont(new java.awt.Font("Arial Unicode MS", 0, 18)); // NOI18N
        lblUsuario.setText("Usuario");
        jPanel1.add(lblUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));
        jPanel1.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 133, -1));

        lblClave.setFont(new java.awt.Font("Arial Unicode MS", 0, 18)); // NOI18N
        lblClave.setText("Clave");
        jPanel1.add(lblClave, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));
        jPanel1.add(passClave, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 133, -1));

        btnIngresar.setText("ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnIngresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, -1, -1));
        jPanel1.add(lblMensaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 370, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
    
        String user,contra;
        user=this.txtUsuario.getText();
        contra="";
        boolean logeado=false;
        //txtPassword proceso
        char[] pass = this.passClave.getPassword();
        //System.out.println(txtPassword.getText());
            for (int i = 0; i < pass.length; i++) {
                contra=contra+pass[i];                
            }
        user=user.replaceAll("\\s","");
        contra=contra.replaceAll("\\s","");
        if(user.length()>0&&contra.length()>0){
            if(loginAdmin(user,contra)){                
                    logeado=true;
                    FrmSeleccionAdmin FrmSA=new FrmSeleccionAdmin();
                    FrmSA.setVisible(true);
             }
        }else{
            if(this.loginProfesor(user)){
                logeado=true;
                //abre la ventana de seleecion profesor
            }
        }
        if(logeado){
            try {
                this.registrar(user);
                //this.generarArchivosActas();
                //registrar docente y generar archivos de actas
            } catch (IOException ex) {
                Logger.getLogger(FrmLogin.class.getName()).log(Level.SEVERE, null, ex);
            
             }
        }
    }//GEN-LAST:event_btnIngresarActionPerformed

    private boolean loginProfesor(String documento){
        boolean logeo=false;
        if(documento.length()==0)
        {
        this.lblMensaje.setText("POR FAVOR INTRODUZCA SU NUMERO DE DOCUMENTO");
        }else{
            Validaciones va=new Validaciones();
            if(va.validarNumeros(documento)){
            //codigo para logear
            Conexion con=new Conexion();
            Connection cone=con.conectar();;
            Select select=new Select(cone);
            ResultSet rs=select.select("PROFESOR","PROFESOR_ID" , documento);
                try {
                    if(rs.next()){
                        logeo=true;
                        dispose();
                    }else{
                        this.lblMensaje.setText("LOGIN INCORRECTO");
                        this.txtUsuario.setText("");
                    }   } catch (SQLException ex) {
                    //Logger.getLogger(FrmLoginProfesor.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    cone.close();
                } catch (SQLException ex) {
                   // Logger.getLogger(FrmLoginProfesor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
            this.lblMensaje.setText("SU DOCUMENTO DEBEN SER SOLO NUMEROS");
            }
        }
        return logeo;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIngresar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblClave;
    private javax.swing.JLabel lblIngresar;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPasswordField passClave;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    private void registrar(String user) throws IOException {
        String registro="";
        Calendar fecha = new GregorianCalendar();
        int año = fecha.get(Calendar.YEAR);
        int mes = fecha.get(Calendar.MONTH);
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        int hora = fecha.get(Calendar.HOUR_OF_DAY);
        int minuto = fecha.get(Calendar.MINUTE);
        int segundo = fecha.get(Calendar.SECOND);
        registro="\n"+año+"-"+(mes+1)+"-"+dia+" "+hora+":"+minuto+":"+segundo;
        registro=registro+","+user+";";
        ArchivosTexto.escribirOCrearTxt("archivos\\log.txt", ArchivosTexto.leer("archivos\\log.txt")+'\n'+registro);
    }

    private boolean loginAdmin(String user, String contra) {
        boolean logeo=false;
            Conexion con=new Conexion();
            Connection cone=con.conectar();;
            Select select=new Select(cone);
            //ResultSet rs=select.
            if(select.selectLogin("USUARIOS_CON_PERMISOS","USUARIO",user,"CLAVE", contra)){
            logeo=true;
            dispose();
            }else{
            this.lblMensaje.setText("LOGIN INCORRECTO");
            }
         return logeo;
    }
    
    private void generarArchivosActas() throws SQLException{
      Conexion con=new Conexion();
      Connection cone=con.conectar();
      Select select=new Select(cone);
      ResultSet rs=select.selectTabla("ACTA");
      DefaultTableModel modelo = new DefaultTableModel();
       if(rs!=null){
           while (rs.next()) {
               String informacionActa;
               int numeroActa=(int) rs.getObject(1);
               System.out.println(numeroActa+"-");
               Reportes rep=new Reportes();
               informacionActa=rep.generarReporteActa(cone, numeroActa);
               System.out.println(this.generarRutaActa(1));
            }           
       try {
        rs.close();
        cone.close();
       } catch (SQLException ex) {
                    }         
       }
    
    }
    private String generarRutaActa(int numero){
        String ruta="acta_"+numero;
        try {
            
            Conexion con=new Conexion();
            Connection cone=con.conectar();
            Select sl=new Select(cone);
            ResultSet rs=sl.selectGeneral("SELECT DATE_FORMAT(FECHA, '%d-%m-%Y') AS FECHA FROM ACTA WHERE ACTAID="+numero+";");
            if(rs.next()){
                ruta+=(String)rs.getObject(1);
            }
           
        } catch (SQLException ex) {
            Logger.getLogger(FrmLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        ruta="archivos\\ruta";
        return ruta;
    }
}
